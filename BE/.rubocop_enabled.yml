# These are all the cops that are enabled in the default configuration.

Layout/AccessModifierIndentation:
  Description: Check indentation of private/protected visibility modifiers.
  Enabled: true

Style/Alias:
  Description: "Use alias_method instead of alias."
  Enabled: true

Layout/HashAlignment:
  Description: >-
    Align the elements of a hash literal if they span more than
    one line.
  Enabled: true

Layout/ParameterAlignment:
  Description: >-
    Align the parameters of a method call if they span more
    than one line.
  Enabled: true

Style/AndOr:
  Description: "Use &&/|| instead of and/or."
  Enabled: true

Style/ArrayJoin:
  Description: "Use Array#join instead of Array#*."
  Enabled: true

Style/AsciiComments:
  Description: "Use only ascii symbols in comments."
  Enabled: false

Naming:
  Description: "Use only ascii symbols in identifiers."
  Enabled: true

Style/Attr:
  Description: "Checks for uses of Module#attr."
  Enabled: true

Style/BeginBlock:
  Description: "Avoid the use of BEGIN blocks."
  Enabled: true

Style/BlockComments:
  Description: "Do not use block comments."
  Enabled: true

Metrics/BlockNesting:
  Description: "Avoid excessive block nesting"
  Enabled: true

Style/BlockDelimiters:
  Description: >-
    Avoid using {...} for multi-line blocks (multiline chaining is
    always ugly).
    Prefer {...} over do...end for single-line blocks.
  Enabled: true

Style/CaseEquality:
  Description: "Avoid explicit use of the case equality operator(===)."
  Enabled: true

Layout/CaseIndentation:
  Description: "Indentation of when in a case/when/[else/]end."
  Enabled: true

Style/CharacterLiteral:
  Description: "Checks for uses of character literals."
  Enabled: true

Style/ClassAndModuleChildren:
  Description: "Checks style of children classes and modules."
  Enabled: true

Style/ClassCheck:
  Description: "Enforces consistent use of `Object#is_a?` or `Object#kind_of?`."
  Enabled: true

Style/ClassMethods:
  Description: "Use self when defining module/class methods."
  Enabled: true

Style/ClassVars:
  Description: "Avoid the use of class variables."
  Enabled: true

Style/CollectionMethods:
  Description: "Preferred collection methods."
  Enabled: true

Style/ColonMethodCall:
  Description: "Do not use :: for method call."
  Enabled: true

Style/CommentAnnotation:
  Description: >-
    Checks formatting of special comments
    (TODO, FIXME, OPTIMIZE, HACK, REVIEW).
  Enabled: true

Layout/CommentIndentation:
  Description: "Indentation of comments."
  Enabled: true

Style/DefWithParentheses:
  Description: "Use def with parentheses when there are arguments."
  Enabled: true

Style/PreferredHashMethods:
  Description: "Checks for use of deprecated Hash methods."
  Enabled: true

Style/Documentation:
  Description: "Document classes and non-namespace modules."
  Enabled: true

Layout/DotPosition:
  Description: "Checks the position of the dot in multi-line method calls."
  Enabled: true

Style/DoubleNegation:
  Description: "Checks for uses of double negation (!!)."
  Enabled: false

Style/EachWithObject:
  Description: "Prefer `each_with_object` over `inject` or `reduce`."
  Enabled: true

Layout/EmptyLineBetweenDefs:
  Description: "Use empty lines between defs."
  Enabled: true

Layout/EmptyLines:
  Description: "Don't use several empty lines in a row."
  Enabled: true

Layout/EmptyLinesAroundAccessModifier:
  Description: "Keep blank lines around access modifiers."
  Enabled: true

Layout/EmptyLinesAroundBlockBody:
  Description: "Keeps track of empty lines around expression bodies."
  Enabled: true

Layout/EmptyLinesAroundClassBody:
  Description: "Keeps track of empty lines around expression classes."
  Enabled: true

Layout/EmptyLinesAroundModuleBody:
  Description: "Keeps track of empty lines around expression modules."
  Enabled: true

Style/EmptyLiteral:
  Description: "Prefer literals to Array.new/Hash.new/String.new."
  Enabled: true

Style/EndBlock:
  Description: "Avoid the use of `END` blocks. Use `Kernel#at_exit` instead."
  Enabled: true

Layout/EndOfLine:
  Description: "Use Unix-style line endings."
  Enabled: true

Style/EvenOdd:
  Description: "Favor the use of Fixnum#even? && Fixnum#odd?"
  Enabled: true

Lint/FlipFlop:
  Description: "Checks for flip flops"
  Enabled: true

Style/For:
  Description: "Checks use of for or each in multiline loops."
  Enabled: true

Style/FormatString:
  Description: "Enforce the use of Kernel#sprintf, Kernel#format or String#%."
  Enabled: true

Style/GlobalVars:
  Description: "Do not introduce global variables."
  Enabled: true

Style/GuardClause:
  Description: "Check for conditionals that can be replaced with guard clauses"
  Enabled: true

Style/HashSyntax:
  Description: >-
    Prefer Ruby 1.9 hash syntax { a: 1, b: 2 } over 1.8 syntax
    { :a => 1, :b => 2 }.
  Enabled: true

Style/IfUnlessModifier:
  Description: >-
    Favor modifier if/unless usage when you have a
    single-line body.
  Enabled: true

Style/IfWithSemicolon:
  Description: "Never use if x; .... Use the ternary operator instead."
  Enabled: true

Layout/IndentationConsistency:
  Description: "Keep indentation straight."
  Enabled: true

Layout/IndentationWidth:
  Description: "Use 2 spaces for indentation."
  Enabled: true

Layout/FirstArrayElementIndentation:
  Description: >-
    Checks the indentation of the first element in an array
    literal.
  Enabled: true

Layout/FirstHashElementIndentation:
  Description: "Checks the indentation of the first key in a hash literal."
  Enabled: true

Style/Lambda:
  Description: "Use the new lambda literal syntax for single-line blocks."
  Enabled: true

Style/LambdaCall:
  Description: "Use lambda.call(...) instead of lambda.(...)."
  Enabled: true

Layout/LeadingCommentSpace:
  Description: "Comments should start with a space."
  Enabled: true

Style/LineEndConcatenation:
  Description: >-
    Use \ instead of + or << to concatenate two string literals at
    line end.
  Enabled: true

Layout/LineLength:
  Description: "Limit lines to 80 characters."
  Enabled: true

Style/MethodCallWithoutArgsParentheses:
  Description: "Do not use parentheses for method calls with no arguments."
  Enabled: true

Style/MethodDefParentheses:
  Description: >-
    Checks if the method definitions have or don"t have
    parentheses.
  Enabled: true

Style/ModuleFunction:
  Description: "Checks for usage of `extend self` in modules."
  Enabled: true

Style/MultilineBlockChain:
  Description: "Avoid multi-line chains of blocks."
  Enabled: true

Style/MultilineIfThen:
  Description: "Never use then for multi-line if/unless."
  Enabled: true

Style/MultilineTernaryOperator:
  Description: >-
    Avoid multi-line ?: (the ternary operator);
    use if/unless instead.
  Enabled: true

Style/NegatedIf:
  Description: >-
    Favor unless over if for negative conditions
    (or control flow or).
  Enabled: true

Style/NegatedWhile:
  Description: "Favor until over while for negative conditions."
  Enabled: true

Style/NestedTernaryOperator:
  Description: "Use one expression per branch in a ternary operator."
  Enabled: true

Style/Next:
  Description: "Use `next` to skip iteration instead of a condition at the end."
  Enabled: true

Style/NilComparison:
  Description: "Prefer x.nil? to x == nil."
  Enabled: true

Style/NonNilCheck:
  Description: "Checks for redundant nil checks."
  Enabled: true

Style/Not:
  Description: "Use ! instead of not."
  Enabled: true

Style/NumericLiterals:
  Description: >-
    Add underscores to large numeric literals to improve their
    readability.
  Enabled: true

Style/OneLineConditional:
  Description: >-
    Favor the ternary operator(?:) over
    if/then/else/end constructs.
  Enabled: true

Naming/BinaryOperatorParameterName:
  Description: "When defining binary operators, name the argument other."
  Enabled: true

Style/ParenthesesAroundCondition:
  Description: >-
    Don't use parentheses around the condition of an
    if/unless/while.
  Enabled: true

Style/PercentLiteralDelimiters:
  Description: "Use `%`-literal delimiters consistently"
  Enabled: true

Style/PerlBackrefs:
  Description: "Avoid Perl-style regex back references."
  Enabled: true

Style/Proc:
  Description: "Use proc instead of Proc.new."
  Enabled: true

Style/RaiseArgs:
  Description: "Checks the arguments passed to raise/fail."
  Enabled: true

Style/RedundantBegin:
  Description: "Don't use begin blocks when they are not needed."
  Enabled: true

Style/RedundantException:
  Description: "Checks for an obsolete RuntimeException argument in raise/fail."
  Enabled: true

Style/RedundantReturn:
  Description: "Don't use return where it's not required."
  Enabled: true

Style/RedundantSelf:
  Description: "Don't use self where it's not needed."
  Enabled: true

Style/RegexpLiteral:
  Description: >-
    Use %r for regular expressions matching more than
    `MaxSlashes` '/' characters.
    Use %r only for regular expressions matching more than
    `MaxSlashes` '/' character.
  Enabled: true

Style/RescueModifier:
  Description: "Avoid using rescue in its modifier form."
  Enabled: true

Style/SelfAssignment:
  Description: "Checks for places where self-assignment shorthand should have been used."
  Enabled: true

Style/Semicolon:
  Description: "Don't use semicolons to terminate expressions."
  Enabled: true

Style/SignalException:
  Description: "Checks for proper usage of fail and raise."
  Enabled: true

Style/SingleLineBlockParams:
  Description: "Enforces the names of some block params."
  Enabled: false

Style/SingleLineMethods:
  Description: "Avoid single-line methods."
  Enabled: true

Layout/SpaceBeforeFirstArg:
  Description: >-
    Checks that exactly one space is used between a method name
    and the first argument for method calls without parentheses.
  Enabled: true

Layout/SpaceAfterColon:
  Description: "Use spaces after colons."
  Enabled: true

Layout/SpaceAfterComma:
  Description: "Use spaces after commas."
  Enabled: true

Layout/SpaceAroundKeyword:
  Description: "Use spaces after if/elsif/unless/while/until/case/when."
  Enabled: true

Layout/SpaceAfterMethodName:
  Description: >-
    Never put a space between a method name and the opening
    parenthesis in a method definition.
  Enabled: true

Layout/SpaceAfterNot:
  Description: Tracks redundant space after the ! operator.
  Enabled: true

Layout/SpaceAfterSemicolon:
  Description: "Use spaces after semicolons."
  Enabled: true

Layout/SpaceBeforeBlockBraces:
  Description: >-
    Checks that the left block brace have space
    before it.
  Enabled: true

Layout/SpaceBeforeComma:
  Description: "No spaces before commas."
  Enabled: true
